name: komodo

# Single docker-compose.yml for both local and TrueNAS deployments
# Use environment variables to configure deployment-specific settings
# Based on official Komodo MongoDB setup: https://komo.do/docs/setup/mongo
# https://stackoverflow.com/questions/30449313/how-do-i-make-a-docker-container-start-automatically-on-system-boot


services:

  # Komodo Core - Main web application
  komodo-core:
    image: ghcr.io/moghtech/komodo-core:latest
    container_name: komodo-core
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
      # Traefik routing
      - "traefik.enable=true"
      - "traefik.http.routers.komodo.rule=Host(`komodo.${HOSTNAME:-pixeloven.com}`)"
      - "traefik.http.routers.komodo.entrypoints=websecure"
      - "traefik.http.services.komodo.loadbalancer.server.port=9120"
      - "traefik.http.routers.komodo.tls=true"
      - "traefik.http.routers.komodo.tls.certresolver=letsencrypt"
    restart: unless-stopped
    depends_on:
      - komodo-mongo
    ports:
      - 9120:9120
    environment:
      - KOMODO_HOST=komodo.${HOSTNAME:-pixeloven.com}
      - KOMODO_DATABASE_ADDRESS=komodo-mongo:27017
      - KOMODO_DATABASE_USERNAME=${KOMODO_DB_USERNAME:-admin}
      - KOMODO_DATABASE_PASSWORD=${KOMODO_DB_PASSWORD:-password}
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - komodo_repo_cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
      ## Allows for systemd Periphery connection at 
      ## "http://host.docker.internal:8120"
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - proxy
      - komodo
  
  # MongoDB database
  komodo-mongo:
    image: mongo
    container_name: komodo-mongo
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
      - "traefik.enable=false"
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    # ports:
    #   - 27017:27017
    volumes:
      - komodo_mongo_data:/data/db
      - komodo_mongo_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${KOMODO_DB_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${KOMODO_DB_PASSWORD:-password}
    networks:
      - proxy
      - komodo

  # Komodo Periphery - Agent service
  komodo-periphery:
    image: ghcr.io/moghtech/komodo-periphery:latest
    container_name: komodo-periphery
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
      # Traefik routing for external access
      - "traefik.enable=true"
      - "traefik.http.routers.komodo-periphery.rule=Host(`periphery.${HOSTNAME:-pixeloven.com}`)"
      - "traefik.http.routers.komodo-periphery.entrypoints=websecure"
      - "traefik.http.services.komodo-periphery.loadbalancer.server.port=8120"
      - "traefik.http.routers.komodo-periphery.tls=true"
      - "traefik.http.routers.komodo-periphery.tls.certresolver=letsencrypt"
    restart: unless-stopped
    environment:
      - PERIPHERY_PASSKEYS=${KOMODO_PASSKEY:-password}
      - PERIPHERY_SSL_ENABLED=true
      - PERIPHERY_DISABLE_TERMINALS=false
      - PERIPHERY_INCLUDE_DISK_MOUNTS=/etc/hostname
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - /etc/komodo:/etc/komodo
    networks:
      - proxy
      - komodo

networks:
  proxy:
    name: proxy
    external: true
  komodo:
    name: komodo
    
volumes:
  # Mongo
  komodo_mongo_data:
    name: komodo_mongo_data
  komodo_mongo_config:
    name: komodo_mongo_config
  # Core
  komodo_repo_cache:
    name: komodo_repo_cache 