name: searxng

services:
  # SearXNG service for metasearch functionality
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    restart: unless-stopped
    networks:
      - proxy
      - searxng
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - SEARXNG_HOSTNAME=${HOSTNAME:-localhost}
      - SEARXNG_BASE_URL=https://${HOSTNAME:-localhost}:8080/
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - searxng_data:/var/cache/searxng:rw
      - ./config:/etc/searxng:rw
    depends_on:
      searxng-valkey:
        condition: service_started
        required: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.searxng.entrypoints=websecure"
      - "traefik.http.services.searxng.loadbalancer.server.port=8080"
      - "traefik.http.routers.searxng.service=searxng"
      - "traefik.http.routers.searxng.rule=Host(`searxng.${HOSTNAME:-pixeloven.com}`)"
      - "traefik.http.routers.searxng.tls=true"
      - "traefik.http.routers.searxng.tls.certresolver=letsencrypt"

  searxng-valkey:
    container_name: searxng-valkey
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    networks:
      - searxng
    volumes:
      - valkey_data:/data
    labels:
      - "traefik.enable=false"  # Redis doesn't need external access

networks:
  proxy:
    name: proxy
    external: true
  searxng:
    name: searxng

volumes:
  searxng_data:
    name: searxng_data
  valkey_data:
    name: valkey_data 