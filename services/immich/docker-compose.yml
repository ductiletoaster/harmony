name: immich

# Single docker-compose.yml for both local and TrueNAS Dockge
# Use environment variables to configure deployment-specific settings

services:
  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    restart: unless-stopped
    networks:
      - proxy
      - immich
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    volumes:
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.entrypoints=websecure"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      - "traefik.http.routers.immich.service=immich"
      - "traefik.http.routers.immich.rule=Host(`immich.${HOSTNAME:-pixeloven.com}`)"
      - "traefik.http.routers.immich.tls=true"
      - "traefik.http.routers.immich.tls.certresolver=letsencrypt"

  immich-machine-learning:
    container_name: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://docs.immich.app/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    restart: unless-stopped
    networks:
      - immich
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    volumes:
      - immich_model_cache:/cache
    env_file:
      - .env
    healthcheck:
      disable: false

  redis:
    container_name: immich-redis
    image: docker.io/valkey/valkey:8-bookworm
    restart: unless-stopped
    networks:
      - immich
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich-postgres
    image: ghcr.io/immich-app/postgres:17-vectorchord0.5.3-pgvector0.8.1
    restart: unless-stopped
    networks:
      - immich
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_DB=${DB_DATABASE_NAME:-immich}
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - immich_postgres_data:/var/lib/postgresql/data
    shm_size: 128mb

networks:
  proxy:
    name: proxy
    external: true
  immich:
    name: immich

volumes:
  immich_model_cache:
    name: immich_model_cache
  immich_postgres_data:
    name: immich_postgres_data
