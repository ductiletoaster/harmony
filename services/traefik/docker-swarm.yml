# https://doc.traefik.io/traefik/v1.4/user-guide/examples/#lets-encrypt-support
# https://www.reddit.com/r/portainer/comments/12z8ctr/how_to_setup_traefik_to_access_containers_in/
# Setup .env for portable configuration 

# https://github.com/bluepuma77/traefik-best-practice/tree/main/docker-swarm-traefik
name: traefik

services:
  traefik:
    image: traefik:v3.3
    hostname: '{{.Node.Hostname}}'
    ports:
      # listen on host ports without ingress network
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro # Traefik config file
      - traefik-certs:/certs # Docker volume to store the acme file for the Certificates
      #- /var/log:/var/log
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
      # constrain to a single node https://community.traefik.io/t/traefik-proxy-on-docker-swarm-multiple-managers/16642/7
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mydashboard.rule=Host(`traefik.local.briangebel.com`)"
        - "traefik.http.routers.mydashboard.service=api@internal"
        - "traefik.http.routers.mydashboard.middlewares=myauth"
        - "traefik.http.services.mydashboard.loadbalancer.server.port=1337"
        - "traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"

  whoami:
    image: traefik/whoami:v1.10
    hostname: '{{.Node.Hostname}}'
    networks:
      - proxy
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.local.briangebel.com`)"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
networks:
  proxy:
    name: proxy
    driver: overlay
    attachable: true

volumes:
  traefik-certs:
    name: traefik-certs